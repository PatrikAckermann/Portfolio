{
    "back": "Go back",
    "openPortfolio": "Open Portfolio",
    "subtitle": "Application Development Apprentice @ Modern IT Academy (isolutions/GEWA)",
    "programmingLanguages": "Programming Languages",
    "projects": "Projects",
    "contact": "Contact",
    "language": "Language",
    "project": "Project",
    "mobileAlert": "The usage of this site on mobile is not recommended. For the best experience, open it on a PC.",
    "languageError": "The programming language couldn't be found. Go back to the homepage and try again.",
    "projectError": "This project couldn't be found. Go back to the homepage and try again.",
    "error": "Error",
    "errorMessage": "An error occurred.",

    "ABOUT PAGE": "",
    "about": "About me",

    "LANGUAGE PAGE": "",
    "skills": "Skills",

    "PROJECT PAGE": "",
    "description": "Description",
    "technologies": "Technologies",
    "openPage": "Open Website",
    "seeOnGithub": "See on GitHub",
    "download": "Download",
    "seeOnNPM": "See on NPM",

    "CONTACT": " Send an E-Mail.",
    "subject": "Subject",
    "message": "Message",
    "sendMail": "Send E-Mail",

    "PROJECTS": "",
    "posterGenTitle": "Poster Generator",
    "posterGenDescription": "The Poster Generator can make animated posters with shapes and text that can be customized. Some of the customization options are size, color, position, animation, and much more. The poster can be saved as a PNG image or as a WEBM video.",
    "chatAppTitle": "Chat App",
    "chatAppDescription": "The chat app lets you exchange messages with other users. The app requires you to make an account with an username and a password. After logging in you can find other users ny username and start a chat with them.\n\nThe accounts and chats are saved on a serverside database. The client also has a database to save all of the users chats.",
    "csWeatherAppTitle": "C# Weather App",
    "csWeatherAppDescription": "With the weather app you can see the weather of any location. It can show the temperature, sunrise, sunset, visibility, and much more. The app also has a forecast in 3-hour steps.\nIn the location tab you can search for any city. You can save them so you won't have to search the cities you want to know the weather of every time.\n\nThe weather data get downloaded from the OpenWeatherMaps API.",
    "pyWeatherAppTitle": "Python Weather App",
    "pyWeatherAppDescription": "With the weather app you can see the weather of any location. It can show the temperature, sunrise, sunset, visibility, and much more. The app also has a forecast in 3-hour steps.\nIn the location tab you can search for any city. You can save them so you won't have to search the cities you want to know the weather of every time.\n\nThe weather data get downloaded from the OpenWeatherMaps API.",
    "csvParserTitle": "JS CSV Parser",
    "csvParserDescription": "The CSV Parser takes a CSV string and converts it to a javascript object. With the options you can alter how the CSV is being read. You can add categories that change the structure of the object and you can change the datatypes.",
    "minesweeperTitle": "Minesweeper",
    "minesweeperDescription": "Just another Minesweeper. It's made in Python with the GUI library 'tkinter'.\n\nThe game uses a simple algorithm for revealing fields/areas you click on.",
    "todoListsTitle": "Todo Lists",
    "todoListsDescription": "With the Todo-List website you can create lists with things that you have to do. The Todos can be marked as done.\n\nThe website is made with plain javascript. If I were to remake this website, I'd do it in React now.\n\nThe data gets saved in cookies so it isn't being lost.",

    "LANGUAGES": "",
    "csName": "C#",
    "csDescription": "I made multiple programs with GUI and backends with databases in C#.\n\nThe Weather App was my first application with a WPF GUI. The GUI contains ext with the weather data and images that are matching the weather. The weather app downloads the data from an API in the JSON format and then converts it to a C# object.\n\nWith the Entity Framework I made multiple databases. They don't have a frontend so they're not listed on this website but you can find them on my GitHub.\n\nOne of the databases is an inventory system. It can save, edit and delete entities with a location, amount, user, and much more.\nThe database uses an ASP.NET API to read and edit it.",
    "pyName": "Python",
    "pyDescription": "The biggest python project I made was the Chat App. It uses multiple big libraries.\nThe communication between the server and client is made with sockets. For saving messages and accounts there are SQLite databases on the server. The client also has a message database for all chats that a user is a part of.\n\nBefore making a C# Weather App, I also made a Weather App in Python. It downloads the data from the same API as the C# version and displays the data in a Tkinter GUI.\n\nI used Tkinter for other projects too. One of them is the Minesweeper.",
    "jsName": "Javascript (+ HTML/CSS)",
    "jsDescription": "All websites that I made contain Javascript. Most of the Javascript projects I've worked on are made with React.\n\nThe Poster Generator is a website, that's mostly written in Javascript with React. In this project I learned the most about the language, as it took quite a while to develop it. Smaller projects I've made with React are the CanvasEditor and exercise projects. This portfolio was made with React and React Router too.\n\nWith the CSV Parser I've released my first NPM package.\n\nSome older projects are made in pure javascript without any libraries. One of those is the TodoList website.\n\nAll of my websites made with Javascript also contain CSS. I can design websites with a complexity degree up to the one of this portfolio website.",
    "sqlName": "SQL",
    "sqlDescription": "I've made databases in C# with the Entity Framework and in Python with SQLite. I also used the Microsoft SQL Server Management Studio to work on databases.\n\nI have written multiple databases for the Chat App with SQLite. On both the server and the client there is a SQLite database to save all the chats. On the server it saves the accounts with encrypted passwords.\n\nFor an exercise project I've made an inventory API that uses an Entity Framework database. It contains different tables for objects, locations, users, etc. that are linked with foreign keys.",

    "ABOUT": "Learn more about what I do when I'm not programming.",
    "about1Title": "",
    "about1Text": "",
    "about2Title": "",
    "about2Text": "",
    "about3Title": "",
    "about3Text": "",
    "about4Title": "",
    "about4Text": ""
}